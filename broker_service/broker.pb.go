// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: broker.proto

package broker_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action int32

const (
	Action_AGREGAR_BASE     Action = 0
	Action_RENOMBRAR_BASE   Action = 1
	Action_ACTUALIZAR_VALOR Action = 2
	Action_BORRAR_BASE      Action = 3
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "AGREGAR_BASE",
		1: "RENOMBRAR_BASE",
		2: "ACTUALIZAR_VALOR",
		3: "BORRAR_BASE",
	}
	Action_value = map[string]int32{
		"AGREGAR_BASE":     0,
		"RENOMBRAR_BASE":   1,
		"ACTUALIZAR_VALOR": 2,
		"BORRAR_BASE":      3,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_broker_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{0}
}

type VectorClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *VectorClock) Reset() {
	*x = VectorClock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorClock) ProtoMessage() {}

func (x *VectorClock) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorClock.ProtoReflect.Descriptor instead.
func (*VectorClock) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{0}
}

func (x *VectorClock) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *VectorClock) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *VectorClock) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type WhereCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commando string `protobuf:"bytes,1,opt,name=commando,proto3" json:"commando,omitempty"`
}

func (x *WhereCommandRequest) Reset() {
	*x = WhereCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhereCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhereCommandRequest) ProtoMessage() {}

func (x *WhereCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhereCommandRequest.ProtoReflect.Descriptor instead.
func (*WhereCommandRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{1}
}

func (x *WhereCommandRequest) GetCommando() string {
	if x != nil {
		return x.Commando
	}
	return ""
}

type WhereCommandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fulcrum int32 `protobuf:"varint,1,opt,name=fulcrum,proto3" json:"fulcrum,omitempty"`
}

func (x *WhereCommandReply) Reset() {
	*x = WhereCommandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhereCommandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhereCommandReply) ProtoMessage() {}

func (x *WhereCommandReply) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhereCommandReply.ProtoReflect.Descriptor instead.
func (*WhereCommandReply) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{2}
}

func (x *WhereCommandReply) GetFulcrum() int32 {
	if x != nil {
		return x.Fulcrum
	}
	return 0
}

// Informante indica comando que tiró error e ip de fulcrum donde preguntó
type InformanteConflictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commando    string       `protobuf:"bytes,1,opt,name=commando,proto3" json:"commando,omitempty"`
	VectorClock *VectorClock `protobuf:"bytes,2,opt,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
	Fulcrum     int32        `protobuf:"varint,3,opt,name=fulcrum,proto3" json:"fulcrum,omitempty"`
}

func (x *InformanteConflictRequest) Reset() {
	*x = InformanteConflictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformanteConflictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformanteConflictRequest) ProtoMessage() {}

func (x *InformanteConflictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformanteConflictRequest.ProtoReflect.Descriptor instead.
func (*InformanteConflictRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{3}
}

func (x *InformanteConflictRequest) GetCommando() string {
	if x != nil {
		return x.Commando
	}
	return ""
}

func (x *InformanteConflictRequest) GetVectorClock() *VectorClock {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

func (x *InformanteConflictRequest) GetFulcrum() int32 {
	if x != nil {
		return x.Fulcrum
	}
	return 0
}

// Broker responde con fulcrum al que le debe preguntar
// Usualmente fulcrum 1 después de merge
type InformanteConflictReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fulcrum int32 `protobuf:"varint,1,opt,name=fulcrum,proto3" json:"fulcrum,omitempty"`
}

func (x *InformanteConflictReply) Reset() {
	*x = InformanteConflictReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformanteConflictReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformanteConflictReply) ProtoMessage() {}

func (x *InformanteConflictReply) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformanteConflictReply.ProtoReflect.Descriptor instead.
func (*InformanteConflictReply) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{4}
}

func (x *InformanteConflictReply) GetFulcrum() int32 {
	if x != nil {
		return x.Fulcrum
	}
	return 0
}

// Informante indica comando que tiró error e ip de fulcrum donde preguntó
type VanguardiaConflictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commando    string       `protobuf:"bytes,1,opt,name=commando,proto3" json:"commando,omitempty"`
	VectorClock *VectorClock `protobuf:"bytes,2,opt,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
	Fulcrum     int32        `protobuf:"varint,3,opt,name=fulcrum,proto3" json:"fulcrum,omitempty"`
}

func (x *VanguardiaConflictRequest) Reset() {
	*x = VanguardiaConflictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VanguardiaConflictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VanguardiaConflictRequest) ProtoMessage() {}

func (x *VanguardiaConflictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VanguardiaConflictRequest.ProtoReflect.Descriptor instead.
func (*VanguardiaConflictRequest) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{5}
}

func (x *VanguardiaConflictRequest) GetCommando() string {
	if x != nil {
		return x.Commando
	}
	return ""
}

func (x *VanguardiaConflictRequest) GetVectorClock() *VectorClock {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

func (x *VanguardiaConflictRequest) GetFulcrum() int32 {
	if x != nil {
		return x.Fulcrum
	}
	return 0
}

// Broker responde con fulcrum al que le debe preguntar
// Usualmente fulcrum 1 después de merge
type VanguardiaConflictReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConflictSolved string `protobuf:"bytes,1,opt,name=conflictSolved,proto3" json:"conflictSolved,omitempty"`
}

func (x *VanguardiaConflictReply) Reset() {
	*x = VanguardiaConflictReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VanguardiaConflictReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VanguardiaConflictReply) ProtoMessage() {}

func (x *VanguardiaConflictReply) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VanguardiaConflictReply.ProtoReflect.Descriptor instead.
func (*VanguardiaConflictReply) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{6}
}

func (x *VanguardiaConflictReply) GetConflictSolved() string {
	if x != nil {
		return x.ConflictSolved
	}
	return ""
}

type EnemyRequestVanguardia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commando string `protobuf:"bytes,1,opt,name=commando,proto3" json:"commando,omitempty"`
}

func (x *EnemyRequestVanguardia) Reset() {
	*x = EnemyRequestVanguardia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnemyRequestVanguardia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnemyRequestVanguardia) ProtoMessage() {}

func (x *EnemyRequestVanguardia) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnemyRequestVanguardia.ProtoReflect.Descriptor instead.
func (*EnemyRequestVanguardia) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{7}
}

func (x *EnemyRequestVanguardia) GetCommando() string {
	if x != nil {
		return x.Commando
	}
	return ""
}

type EnemyReplyVanguardia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enemigos    int32        `protobuf:"varint,1,opt,name=enemigos,proto3" json:"enemigos,omitempty"`
	VectorClock *VectorClock `protobuf:"bytes,2,opt,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
}

func (x *EnemyReplyVanguardia) Reset() {
	*x = EnemyReplyVanguardia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnemyReplyVanguardia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnemyReplyVanguardia) ProtoMessage() {}

func (x *EnemyReplyVanguardia) ProtoReflect() protoreflect.Message {
	mi := &file_broker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnemyReplyVanguardia.ProtoReflect.Descriptor instead.
func (*EnemyReplyVanguardia) Descriptor() ([]byte, []int) {
	return file_broker_proto_rawDescGZIP(), []int{8}
}

func (x *EnemyReplyVanguardia) GetEnemigos() int32 {
	if x != nil {
		return x.Enemigos
	}
	return 0
}

func (x *EnemyReplyVanguardia) GetVectorClock() *VectorClock {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

var File_broker_proto protoreflect.FileDescriptor

var file_broker_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x37,
	0x0a, 0x0b, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x22, 0x31, 0x0a, 0x13, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x22, 0x2d, 0x0a, 0x11, 0x57, 0x68,
	0x65, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x6f, 0x12, 0x3e, 0x0a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x22, 0x33, 0x0a,
	0x17, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6c, 0x63,
	0x72, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x75, 0x6c, 0x63, 0x72,
	0x75, 0x6d, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69,
	0x61, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x12, 0x3e, 0x0a, 0x0c,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66,
	0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x22, 0x41, 0x0a, 0x17, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x16, 0x45, 0x6e, 0x65,
	0x6d, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x22,
	0x72, 0x0a, 0x14, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x65, 0x6d, 0x69,
	0x67, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x65, 0x6d, 0x69,
	0x67, 0x6f, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x2a, 0x55, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x47, 0x52, 0x45, 0x47, 0x41, 0x52, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x45, 0x4e, 0x4f, 0x4d, 0x42, 0x52, 0x41, 0x52, 0x5f, 0x42, 0x41, 0x53,
	0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x55, 0x41, 0x4c, 0x49, 0x5a, 0x41,
	0x52, 0x5f, 0x56, 0x41, 0x4c, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4f, 0x52,
	0x52, 0x41, 0x52, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x03, 0x32, 0x77, 0x0a, 0x14, 0x57, 0x68,
	0x65, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x5f, 0x0a, 0x13, 0x57, 0x68, 0x65, 0x72, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x68, 0x65, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x32, 0x86, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x74, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12,
	0x6b, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x84, 0x01, 0x0a,
	0x16, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x52, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x6a, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x29, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x32, 0x87, 0x01, 0x0a, 0x17, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12,
	0x6c, 0x0a, 0x1a, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x12, 0x26, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x6e, 0x65, 0x6d, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x69, 0x61, 0x1a, 0x24, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x69, 0x61, 0x22, 0x00, 0x42, 0x33, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x69, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x52, 0x75, 0x69, 0x7a, 0x41, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c,
	0x61, 0x62, 0x33, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_broker_proto_rawDescOnce sync.Once
	file_broker_proto_rawDescData = file_broker_proto_rawDesc
)

func file_broker_proto_rawDescGZIP() []byte {
	file_broker_proto_rawDescOnce.Do(func() {
		file_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_broker_proto_rawDescData)
	})
	return file_broker_proto_rawDescData
}

var file_broker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_broker_proto_goTypes = []interface{}{
	(Action)(0),                       // 0: broker_service.Action
	(*VectorClock)(nil),               // 1: broker_service.VectorClock
	(*WhereCommandRequest)(nil),       // 2: broker_service.WhereCommandRequest
	(*WhereCommandReply)(nil),         // 3: broker_service.WhereCommandReply
	(*InformanteConflictRequest)(nil), // 4: broker_service.InformanteConflictRequest
	(*InformanteConflictReply)(nil),   // 5: broker_service.InformanteConflictReply
	(*VanguardiaConflictRequest)(nil), // 6: broker_service.VanguardiaConflictRequest
	(*VanguardiaConflictReply)(nil),   // 7: broker_service.VanguardiaConflictReply
	(*EnemyRequestVanguardia)(nil),    // 8: broker_service.EnemyRequestVanguardia
	(*EnemyReplyVanguardia)(nil),      // 9: broker_service.EnemyReplyVanguardia
}
var file_broker_proto_depIdxs = []int32{
	1, // 0: broker_service.InformanteConflictRequest.vector_clock:type_name -> broker_service.VectorClock
	1, // 1: broker_service.VanguardiaConflictRequest.vector_clock:type_name -> broker_service.VectorClock
	1, // 2: broker_service.EnemyReplyVanguardia.vector_clock:type_name -> broker_service.VectorClock
	2, // 3: broker_service.WhereInformanteWrite.WhereExecuteCommand:input_type -> broker_service.WhereCommandRequest
	4, // 4: broker_service.InformanteWriteConflict.ReportWriteConflict:input_type -> broker_service.InformanteConflictRequest
	6, // 5: broker_service.VanguardiaReadConflict.ReportReadConflict:input_type -> broker_service.VanguardiaConflictRequest
	8, // 6: broker_service.VanguardiaRequestBroker.EnemyInformationVanguardia:input_type -> broker_service.EnemyRequestVanguardia
	3, // 7: broker_service.WhereInformanteWrite.WhereExecuteCommand:output_type -> broker_service.WhereCommandReply
	5, // 8: broker_service.InformanteWriteConflict.ReportWriteConflict:output_type -> broker_service.InformanteConflictReply
	7, // 9: broker_service.VanguardiaReadConflict.ReportReadConflict:output_type -> broker_service.VanguardiaConflictReply
	9, // 10: broker_service.VanguardiaRequestBroker.EnemyInformationVanguardia:output_type -> broker_service.EnemyReplyVanguardia
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_broker_proto_init() }
func file_broker_proto_init() {
	if File_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorClock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhereCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhereCommandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformanteConflictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformanteConflictReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VanguardiaConflictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VanguardiaConflictReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnemyRequestVanguardia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnemyReplyVanguardia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_broker_proto_goTypes,
		DependencyIndexes: file_broker_proto_depIdxs,
		EnumInfos:         file_broker_proto_enumTypes,
		MessageInfos:      file_broker_proto_msgTypes,
	}.Build()
	File_broker_proto = out.File
	file_broker_proto_rawDesc = nil
	file_broker_proto_goTypes = nil
	file_broker_proto_depIdxs = nil
}
